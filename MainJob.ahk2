#Include ./Utility/Common.ahk2
#Include ./Job/ScreenJob.ahk2

WinTitle := "麥芬"
UniqueID := WinExist(WinTitle)
if not UniqueID {
    Utility.OutputLog("[" WinTitle "] not found")
    ExitApp
}
Utility.OutputLog("[" WinTitle "] found [" UniqueID "]")

screenCtrl := ScreenController(UniqueID)

SetTimer FightJob, 200

Return

FightJob() {
    global screenCtrl
    If not WinActive("ahk_id " UniqueID)
        return

    ; if (screenCtrl.PartyLeaderStartMatch()) {
    ;     Utility.OutputLog("PartyLeaderStartMatch")
    ;     Sleep(2000)
    ; }
    if (screenCtrl.LeaveParty(true)) {
        Utility.OutputLog("LeaveParty")
        Sleep(2000)
    }
    if (screenCtrl.SelectJobPosition()) {
        Utility.OutputLog("SelectJobPosition")
        Sleep(2000)
    }
    if (screenCtrl.StartMatch()) {
        Utility.OutputLog("StartMatch")
        Sleep(10000)
    }

    if (screenCtrl.NoMatch()) {
        Utility.OutputLog("NoMatch")
        Sleep(3000)
    }

    if (screenCtrl.FightSuccess()) {
        Utility.OutputLog("FightSuccess")
        Sleep(5000)
    } else if(screenCtrl.FightSuccess2()) {
        Utility.OutputLog("FightSuccess2")
        Sleep(5000)
    }

    if(screenCtrl.FightFail()) {
        Utility.OutputLog("FightFail")
        Sleep(3000)
    }

    if (screenCtrl.BossChallengeFail()) {
        Utility.OutputLog("BossChallengeFail")
        Sleep(3000)
    }

    if (screenCtrl.BossChallengeSuccess()) {
        Utility.OutputLog("BossChallengeSuccess")
        Sleep(3000)
    }

    if (screenCtrl.FightSuccessButNoReward()) {
        Utility.OutputLog("FightSuccessButNoReward")
        Sleep(1000)
    }

    if (screenCtrl.LevelUp()) {
        Utility.OutputLog("LevelUp")
        Sleep(200)
    }

    if (screenCtrl.StartBossChallenge()) {
        Utility.OutputLog("StartBossChallenge")
        Sleep(10000)
    }
    if (screenCtrl.BossChallengeSuccessAndNext()) {
        Utility.OutputLog("BossChallengeSuccessAndNext")
        Sleep(30000)
    }
}

~RButton::
{
    If not WinActive("ahk_id " UniqueID)
        return
    
    MouseGetPos(&MouseX, &MouseY)
    MouseMove(0, 0)
    color := PixelGetColor(MouseX, MouseY, 'RGB')
    Utility.OutputLog("click " color " " MouseX ", " MouseY)
    
    MouseMove(MouseX, MouseY)
}

^!z:: ; Ctrl+Alt+Z hotkey.
{
    Utility.OutputLog("Z pressed")
    Utility.OutputLog("Stopped")
    ExitApp
}